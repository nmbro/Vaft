<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net462;netstandard2.0</TargetFrameworks>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TestProjectType>UnitTest</TestProjectType>
    <OutDir>bin</OutDir>
  </PropertyGroup>
  <PropertyGroup>
    <Company>Visma</Company>
    <Product>Vaft.SeleniumNunitTests</Product>
    <PackageId>Vaft.SeleniumNunitTests</PackageId>
    <Authors>Visma</Authors>
    <Copyright>Copyright ©  2018</Copyright>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="NUnit" Version="3.11.0" />
    <PackageReference Include="Selenium.Chrome.WebDriver" Version="2.45.0" />
    <PackageReference Include="Selenium.Firefox.WebDriver" Version="0.23.0" />
    <PackageReference Include="Selenium.Support" Version="3.141.0" />
    <PackageReference Include="Selenium.WebDriver" Version="3.141.0" />
    <PackageReference Include="Selenium.WebDriver.IEDriver" Version="3.141.5" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'net462'">
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.Chrome.config">
      <DependentUpon>App.config</DependentUpon>
    </None>
    <None Include="App.config" />
    <None Include="App.Firefox.config">
      <DependentUpon>App.config</DependentUpon>
    </None>
    <None Include="App.IE.config">
      <DependentUpon>App.config</DependentUpon>
    </None>
    <None Include="App.IE10.config">
      <DependentUpon>App.config</DependentUpon>
    </None>
    <None Include="App.IE11.config">
      <DependentUpon>App.config</DependentUpon>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Vaft.Framework\Vaft.Framework.csproj" />
    <ProjectReference Include="..\Vaft.PageObjects\Vaft.PageObjects.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Resources\BaselineScreenshots\avatar-blank.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\BaselineScreenshots\images-page-scr.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\TestUpload.jpeg">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <UsingTask TaskName="TransformXml" AssemblyFile="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\Web\Microsoft.Web.Publishing.Tasks.dll" />
  <Target Name="AfterCompile" Condition="Exists('App.$(Configuration).config')">
    <!--Generate transformed app config in the intermediate directory-->
    <TransformXml Source="App.config" Destination="$(IntermediateOutputPath)$(TargetFileName).config" Transform="App.$(Configuration).config" />
    <!--Force build process to use the transformed configuration file from now on.-->
    <ItemGroup>
      <AppConfigWithTargetPath Remove="App.config" />
      <AppConfigWithTargetPath Include="$(IntermediateOutputPath)$(TargetFileName).config">
        <TargetPath>$(TargetFileName).config</TargetPath>
      </AppConfigWithTargetPath>
    </ItemGroup>
  </Target>
  <!--Override After Publish to support ClickOnce AfterPublish. Target replaces the untransformed config file copied to the deployment directory with the transformed one.-->
  <Target Name="AfterPublish">
    <PropertyGroup>
      <DeployedConfig>$(_DeploymentApplicationDir)$(TargetName)$(TargetExt).config$(_DeploymentFileMappingExtension)</DeployedConfig>
    </PropertyGroup>
    <!--Publish copies the untransformed App.config to deployment directory so overwrite it-->
    <Copy Condition="Exists('$(DeployedConfig)')" SourceFiles="$(IntermediateOutputPath)$(TargetFileName).config" DestinationFiles="$(DeployedConfig)" />
  </Target>
</Project>